/*
 * Test spec to use with TestSimulation
 */
system SYS
instance variables
	static public obj1 : A := new A();
	cpu1:CPU := new CPU(<FP>, 1E6);

operations
	SYS: () ==> SYS
	SYS() ==
	(
		cpu1.deploy(obj1, "Test object one");
	)
	
end SYS

class A
instance variables
	public counts:seq of nat := [ a-a | a in set {1, ..., 200}];
	last:nat := 0;

values
	public MIN = 0;		-- Set by TestSimulation
	public MAX = 0;		-- Set by TestSimulation
	
operations
	public op: () ==> ()
	op() ==
	(
		dcl now:nat := time;
		
		if last > 0
		then let interval = (now - last) in
			counts(interval+1) := counts(interval+1) + 1;
			
		last := now
	);

	public run: () ==> ()
	run() == start(self);

thread
	sporadic(MIN, MAX, 0)(op)
	
end A

class Test
operations
	public test: () ==> ()
	test() ==
	(
		SYS`obj1.run();
		duration(10000) skip;
		
		if elems SYS`obj1.counts(1, ..., A`MIN-1) <> {0}
		then exit "Sporadic has some short intervals";
		
		if elems SYS`obj1.counts(A`MAX+1, ..., 200) <> {0}
		then exit "Sporadic has some long intervals";
	)

end Test
